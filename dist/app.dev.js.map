{"version":3,"sources":["app.js"],"names":["mongoose","require","config","db","express","bodyParser","check","validationResult","session","question","app","PORT","set","connect","process","env","MongoDB_CONNECT_URI","use","urlencoded","extended","json","secret","resave","saveUninitialized","cookie","maxAge","get","req","res","login","getBranchDetails","post","not","isEmpty","isAlpha","isLength","min","withMessage","custom","value","body","password","isEmail","normalizeEmail","errors","status","jsonp","array","insert","undefined","send","redirect","render","serveSubject","subject","submitAnswer","serveFaculty","addQuestion","editQuestion","deleteQuestion","sess","console","log","username","destroy","listen","error"],"mappings":"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","sourcesContent":["const mongoose = require('mongoose');\r\nrequire('dotenv').config();\r\nconst db = require('./models/manage');\r\nconst express = require('express');\r\nconst bodyParser = require('body-parser');\r\n// const expressValidator = require(\"express-validator\");\r\nconst { check, validationResult } = require('express-validator')\r\nvar session = require('express-session');\r\nconst question = require('./models/question');\r\n\r\nconst app = express();\r\nconst PORT = 8080;\r\n\r\nmongoose.set('strictQuery', false);\r\n// mongoose.connect(\"mongodb://127.0.0.1:27017/user\");\r\nmongoose.connect(process.env.MongoDB_CONNECT_URI);\r\n\r\n\r\napp.set('view engine', 'pug');\r\napp.use(express.static('public'))\r\n\r\napp.use(bodyParser.urlencoded({\r\n    extended: true\r\n}));\r\napp.use(bodyParser.json());\r\napp.use(session({\r\n    secret: 'Star boyoyo44',\r\n    resave: false,\r\n    saveUninitialized: true,\r\n    cookie: { maxAge: 300000 }\r\n}))\r\n\r\napp.get('/', function (req, res) {\r\n    req.session.login = false;\r\n    db.getBranchDetails(req, res);\r\n});\r\n\r\napp.post('/SignUp',\r\n    check('username').not().isEmpty().isAlpha().isLength({ min: 5 }).withMessage('User name must be 5 characters'),\r\n    check('password').not().isEmpty().isLength({ min: 6 }).withMessage('Password name must be 6 characters'),\r\n    check('cpassword').custom((value, { req }) => (value === req.body.password)).withMessage(\"Confirm password not match with your password\"),\r\n    check('email').not().isEmpty().isEmail().normalizeEmail().withMessage(\"Enetr proper email\"),\r\n    check('branch').not().isEmpty().isAlpha().withMessage('Invalid Branch'),\r\n    function (req, res) {\r\n        const errors = validationResult(req);\r\n        if (!errors.isEmpty()) {\r\n            return res.status(422).jsonp(errors.array());\r\n        }\r\n        else {\r\n            db.insert(req, res);\r\n        }\r\n    });\r\n\r\napp.post('/Login', function (req, res) {\r\n    db.login(req, res);\r\n})\r\n\r\napp.get('/Student', function (req, res) {\r\n    if (req.session.login==undefined ||req.session.login === false) {\r\n        res.send(\"<script>alert('Session no longer exists')</script>\");\r\n        res.redirect(\"/Logout\");\r\n    }\r\n    res.render(\"student\", req.session);\r\n})\r\n\r\napp.get('/Subject', function (req, res) {\r\n    db.serveSubject(req,res);\r\n    \r\n})\r\n\r\n\r\n\r\napp.post('/Subject', function (req, res) {\r\n    if (req.session.login==undefined ||req.session.login === false) {\r\n        res.send(\"<script>alert('Session no longer exists')</script>\");\r\n    }\r\n    req.session.subject = req.body.subject;\r\n    res.redirect('/Subject?subject=' + req.session.subject)\r\n})\r\n\r\napp.post('/answer', function (req, res) {\r\n    db.submitAnswer(req, res);\r\n})\r\n\r\napp.get('/Faculty', function (req, res) {\r\n    db.serveFaculty(req,res);\r\n   \r\n})\r\n\r\napp.post('/AddQuestion', function (req, res) {\r\n    db.addQuestion(req, res);\r\n})\r\napp.post('/EditQuestion', function (req, res) {\r\n    db.editQuestion(req, res);\r\n})\r\napp.post('/DeleteQuestion', function (req, res) {\r\n    db.deleteQuestion(req, res);\r\n})\r\n\r\napp.get('/logout', function (req, res) {\r\n    sess = req.session;\r\n    console.log(sess.username+\" LOGED OUT\");\r\n    sess.destroy();\r\n    sess.login = false;\r\n    res.redirect('/')\r\n})\r\napp.listen(PORT, (error) => {\r\n    if (!error) {\r\n        console.log(\"Server is Successfully Running\")\r\n    }\r\n    else {\r\n        console.log(\"Error occurred, server can't start\", error);\r\n    }\r\n}\r\n);"],"file":"app.dev.js"}