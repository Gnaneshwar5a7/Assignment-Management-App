"use strict";var mongoose=require("mongoose");require("dotenv").config();var db=require("./models/manage"),express=require("express"),bodyParser=require("body-parser"),_require=require("express-validator"),check=_require.check,validationResult=_require.validationResult,session=require("express-session"),question=require("./models/question"),app=express(),PORT=8080;mongoose.set("strictQuery",!1),mongoose.connect(process.env.MongoDB_CONNECT_URI),app.set("view engine","pug"),app.use(express.static("public")),app.use(bodyParser.urlencoded({extended:!0})),app.use(bodyParser.json()),app.use(session({secret:"Star boyoyo44",resave:!1,saveUninitialized:!0,cookie:{maxAge:3e5}})),app.get("/",function(e,s){e.session.login=!1,db.getBranchDetails(e,s)}),app.post("/SignUp",check("username").not().isEmpty().isAlpha().isLength({min:5}).withMessage("User name must be 5 characters"),check("password").not().isEmpty().isLength({min:6}).withMessage("Password name must be 6 characters"),check("cpassword").custom(function(e,s){return e===s.req.body.password}).withMessage("Confirm password not match with your password"),check("email").not().isEmpty().isEmail().normalizeEmail().withMessage("Enetr proper email"),check("branch").not().isEmpty().isAlpha().withMessage("Invalid Branch"),function(e,s){var n=validationResult(e);if(!n.isEmpty())return s.status(422).jsonp(n.array());db.insert(e,s)}),app.post("/Login",function(e,s){db.login(e,s)}),app.get("/Student",function(e,s){null!=e.session.login&&!1!==e.session.login||(s.send("<script>alert('Session no longer exists')<\/script>"),s.redirect("/Logout")),s.render("student",e.session)}),app.get("/Subject",function(e,s){db.serveSubject(e,s)}),app.post("/Subject",function(e,s){null!=e.session.login&&!1!==e.session.login||s.send("<script>alert('Session no longer exists')<\/script>"),e.session.subject=e.body.subject,s.redirect("/Subject?subject="+e.session.subject)}),app.post("/answer",function(e,s){db.submitAnswer(e,s)}),app.get("/Faculty",function(e,s){db.serveFaculty(e,s)}),app.post("/AddQuestion",function(e,s){db.addQuestion(e,s)}),app.post("/EditQuestion",function(e,s){db.editQuestion(e,s)}),app.post("/DeleteQuestion",function(e,s){db.deleteQuestion(e,s)}),app.get("/logout",function(e,s){sess=e.session,console.log(sess.username+" LOGED OUT"),sess.destroy(),sess.login=!1,s.redirect("/")}),app.listen(PORT,function(e){e?console.log("Error occurred, server can't start",e):console.log("Server is Successfully Running")});
//# sourceMappingURL=app.min.js.map
