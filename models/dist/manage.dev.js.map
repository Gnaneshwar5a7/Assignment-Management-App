{"version":3,"sources":["manage.js"],"names":["mongoose","require","model","bcrypt","user","question","branch","answer","set","branches","getBranchDetails","req","res","find","err","docs","console","log","subject","forEach","element","indexOf","push","subjects","i","sort","render","data","insert","newUser","username","body","salt","genSaltSync","hash","hashSync","password","email","name","fullname","userType","save","result","redirect","login","sess","session","findOne","compare","userId","id","option","send","serveFaculty","undefined","questions","answerDocs","usersubmitions","j","length","x","doc","serveSubject","questionDocs","query","answers","submitions","pending","submitAnswer","newAnswer","addQuestion","newQuestion","editQuestion","findOneAndUpdate","oldquestion","question_","updateMany","deleteQuestion","findOneAndRemove","question_del","deleteMany","module","exports"],"mappings":"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","sourcesContent":["const mongoose = require('mongoose');\r\nconst { model } = require('mongoose');\r\nconst bcrypt = require('bcrypt');\r\nconst user = require('./user');\r\nconst question = require('./question');\r\nconst branch = require('./branch');\r\nconst answer = require('./answers');\r\n\r\nmongoose.set('strictQuery', true);\r\n\r\nvar branches = [];\r\nfunction getBranchDetails(req, res) {\r\n    branch.find(function (err, docs) {\r\n        if (err) {\r\n            console.log(err);\r\n        }\r\n        else {\r\n            branches = docs;\r\n            var subject = []\r\n            var branch = []\r\n            docs.forEach(element => {\r\n                if (branch.indexOf(element.branch == -1)) {\r\n                    branch.push(element.branch);\r\n                }\r\n                element.subjects.forEach(i => {\r\n                    if (subject.indexOf(i) == -1) {\r\n                        subject.push(i);\r\n                    }\r\n                });\r\n            });\r\n            subject.sort();\r\n            branch.sort();\r\n            res.render(\"index\", { data: docs, subject: subject });\r\n        }\r\n    });\r\n}\r\n\r\nfunction insert(req, res) {\r\n    const newUser = new user();\r\n    newUser.username = req.body.username;\r\n\r\n\r\n    var salt = bcrypt.genSaltSync(10);\r\n    var hash = bcrypt.hashSync(req.body.password, salt);\r\n\r\n    newUser.password = hash;\r\n\r\n    newUser.email = req.body.email;\r\n    newUser.name = req.body.fullname;\r\n    newUser.branch = req.body.branch;\r\n    if (req.body.userType == 'Faculty') {\r\n        newUser.subject = req.body.subject;\r\n    }\r\n    newUser.userType = req.body.userType;\r\n\r\n    newUser.save(function (err, result) {\r\n\r\n        if (err) {\r\n\r\n            console.log(err);\r\n        }\r\n        else {\r\n            res.redirect(\"/\");\r\n        }\r\n\r\n    })\r\n}\r\n\r\nfunction login(req, res) {\r\n    var sess = req.session;\r\n    user.findOne({ username: req.body.username }, function (err, docs) {\r\n        if (err) {\r\n            console.log(err)\r\n        }\r\n        else {\r\n            if (docs.username == req.body.username) {\r\n                bcrypt.compare(req.body.password, docs.password, function (err, data) {\r\n                    if (err) {\r\n                        console.log(err);\r\n                    }\r\n                    if (data) {\r\n                        console.log(docs.username+\" LOGED IN\")\r\n                        if (docs.userType === \"Faculty\") {\r\n                            sess.userId = docs.id;\r\n                            sess.username = docs.username;\r\n                            req.session.fullname = docs.fullname;\r\n                            req.session.subject = docs.subject;\r\n                            req.session.branch = docs.branch;\r\n                            req.session.login = true;\r\n                            res.redirect('/Faculty')\r\n                        }\r\n                        else {\r\n                            var subjects = []\r\n                            branches.forEach(i => {\r\n                                if (i.branch == docs.branch) {\r\n                                    subjects = i.subjects\r\n                                }\r\n                            })\r\n                            req.session.subjects = subjects;\r\n                            req.session.userId = docs.id;\r\n                            req.session.username = docs.username;\r\n                            req.session.fullname = docs.fullname;\r\n                            req.session.option = docs.branch;\r\n                            req.session.login = true;\r\n                            res.redirect('/Student');\r\n                        }\r\n                    }\r\n                    else {\r\n                        res.send(\"invalid password\");\r\n                    }\r\n\r\n                });\r\n            }\r\n            else {\r\n                res.send(\"invalid username or password\")\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\n\r\nfunction serveFaculty(req, res) {\r\n    if (req.session.login==undefined || req.session.login == false) {\r\n        res.send(\"<script>alert('Session no longer exists')</script>\")\r\n    }\r\n    question.find({ subject: req.session.subject }, function (err, questions) {\r\n        if (err) {\r\n            console.log(err);\r\n        }\r\n        else {\r\n            answer.find({ subject: req.session.subject }, function (err, answerDocs) {\r\n                if (err) {\r\n                    console.log(err);\r\n                }\r\n                else {\r\n                    req.session.questions = []\r\n                    req.session.usersubmitions = []\r\n                    for (var j = 0; j < questions.length; j++) {\r\n                        var question = questions[j].question\r\n                        req.session.questions.push(question);\r\n                        var x = [];\r\n                        for (var i = 0; i < answerDocs.length; i++) {\r\n                            if (answerDocs[i].question == question) {\r\n                                var doc = {}\r\n                                doc.username = answerDocs[i].username;\r\n                                doc.answer = answerDocs[i].answer;\r\n                                doc.question = answerDocs[i].question;\r\n                                x.push(doc);\r\n                            }\r\n                        }\r\n                        if (req.session.usersubmitions.indexOf(x) == -1) {\r\n                            req.session.usersubmitions.push(x);\r\n                        }\r\n                    }\r\n                    var data = { username: req.session.username, option: req.session.subject, questions: req.session.questions, usersubmitions: req.session.usersubmitions }\r\n                    res.render(\"faculty\", data);\r\n                }\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nfunction serveSubject(req, res) {\r\n    answer.find(function (err, answerDocs) {\r\n        if (err) {\r\n            console.log(err);\r\n        }\r\n        else {\r\n            question.find(function (err, questionDocs) {\r\n                if (err) {\r\n                    console.log(err);\r\n                }\r\n                else {\r\n                    if (req.session.login==undefined ||req.session.login == false) {\r\n                        res.send(\"<script>alert('Session no longer exists')</script>\")\r\n                    }\r\n                    req.session.subject = req.query.subject;\r\n                    req.session.questions = []\r\n                    for (var i = 0; i < questionDocs.length; i++) {\r\n                        if (questionDocs[i].subject == req.session.subject) {\r\n                            if (req.session.questions.indexOf(questionDocs[i].question) == -1) {\r\n                                req.session.questions.push(questionDocs[i].question);\r\n                            }\r\n                        }\r\n                    }\r\n                    req.session.answers = []\r\n                    req.session.submitions = []\r\n                    req.session.pending = []\r\n                    for (var i = 0; i < answerDocs.length; i++) {\r\n                        if (answerDocs[i].subject == req.session.subject && answerDocs[i].username == req.session.username) {\r\n                            if (req.session.submitions.indexOf(answerDocs[i].question) == -1) {\r\n                                req.session.submitions.push(answerDocs[i].question);\r\n                            }\r\n                            if (req.session.answers.indexOf(answerDocs[i].answer) == -1) {\r\n                                req.session.answers.push(answerDocs[i].answer);\r\n                            }\r\n                        }\r\n                    }\r\n                    req.session.questions.forEach(element => {\r\n                        if (req.session.submitions.indexOf(element) == -1) {\r\n                            req.session.pending.push(element)\r\n                        }\r\n                    });\r\n                    res.render('subject', req.session);\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n}\r\n\r\nfunction submitAnswer(req, res) {\r\n    const newAnswer = new answer();\r\n    newAnswer.username = req.session.username;\r\n    newAnswer.subject = req.session.subject;\r\n    newAnswer.question = req.body.question;\r\n    newAnswer.answer = req.body.answer;\r\n    newAnswer.save(function (err, result) {\r\n        if (err) {\r\n\r\n            console.log(err);\r\n        }\r\n        else {\r\n\r\n            res.redirect('/Subject?subject=' + req.session.subject);\r\n        }\r\n    })\r\n}\r\n\r\nfunction addQuestion(req, res) {\r\n    const newQuestion = new question();\r\n    if (req.session.login==undefined ||req.session.login === false) {\r\n        res.send(\"<script>alert('Session no longer exists')</script>\");\r\n    }\r\n    newQuestion.subject = req.session.subject;\r\n    newQuestion.question = req.body.question;\r\n    newQuestion.save(function (err, result) {\r\n        if (err) {\r\n            console.log(err);\r\n        }\r\n        else {\r\n            req.session.question = newQuestion.question;\r\n            res.redirect('/Faculty');\r\n        }\r\n    })\r\n\r\n}\r\n\r\nfunction editQuestion(req, res) {\r\n    if (req.session.login==undefined ||req.session.login === false) {\r\n        res.send(\"<script>alert('Session no longer exists')</script>\");\r\n    }\r\n    question.findOneAndUpdate({ question: req.body.oldquestion, subject: req.body.subject }, { question: req.body.question_ }, function (err, result) {\r\n        if (err) {\r\n            console.log(err);\r\n        }\r\n    });\r\n    answer.updateMany({ question: req.body.oldquestion, subject: req.body.subject }, { question: req.body.question_ }, function (err, result) {\r\n        if (err) {\r\n            console.log(err);\r\n        }\r\n    })\r\n    res.redirect('/Faculty');\r\n}\r\n\r\n\r\n\r\nfunction deleteQuestion(req, res) {\r\n    if (req.session.login==undefined ||req.session.login === false) {\r\n        res.send(\"<script>alert('Session no longer exists')</script>\");\r\n    }\r\n    question.findOneAndRemove({ question: req.body.question_del, subject: req.body.subject }, function (err, result) {\r\n        if (err) {\r\n            console.log(err);\r\n        }\r\n        else {\r\n            ;\r\n        }\r\n    })\r\n    answer.deleteMany({ question: req.body.question_del, subject: req.body.subject }, function (err, result) {\r\n        if (err) {\r\n            console.log(err);\r\n        }\r\n        else {\r\n            ;\r\n        }\r\n    });\r\n    res.redirect('/Faculty')\r\n\r\n}\r\n\r\n\r\nmodule.exports = { insert, login, submitAnswer, serveSubject, serveFaculty,addQuestion, editQuestion, deleteQuestion, getBranchDetails, branches };"],"file":"manage.dev.js"}